from typing import Any, Mapping

def deep_strip(data):
    if isinstance(data, str):
        return data.strip()
    elif isinstance(data, list):
        return [deep_strip(item) for item in data]
    elif isinstance(data, dict):
        return {key: deep_strip(value) for key, value in data.items()}
    else:
        return data

def extra_body(extra_body: Mapping[str, Any]) -> Mapping[str, Any]:
    """
    Validate the extra_body parameter, used for tracking in the Mercury.

    This function validates the `extra_body` parameter to ensure that it contains the required fields and that they are nor empty, invalid.

    Args:
        extra_body (Mapping[str, Any]): The extra_body parameter to validate. It should be a dictionary-like object containing the following fields:
            - session_id (str): Session identifier, generated by you (can be related to the browser session).
            - customer_id (str, optional): Customer identifier, sent by you (to identify your customer inferences, e.g., id, country codes, etc). Defaults to "".
            - channel_id (str, optional): Channel identifier, sent by you (to trace a specific platform you're building your app, e.g., WhatsApp, Telegram, etc). Defaults to "LANGCHAIN_NEOSPACE".
            - Any additional fields you want to track.

    Raises:
        ValueError: If the extra_body parameter doesn't have the 'session_id' field or if it's empty.

    Returns:
        Mapping[str, Any]: The validated (and modified) extra_body parameter.

    Example:
        >>> dict = {
        ...     "session_id": "generated_session_id",
        ...     "customer_id": "your_customer_identifier",
        ...     "channel_id": "your_channel_identifier",
        ...     **additional_fields,
        ... }
        >>> extra_body(dict)
        {'session_id': 'generated_session_id', 'customer_id': 'your_customer_identifier', 'channel_id': 'your_channel_identifier', ..., **additional_fields}

    Note:
        - The 'session_id' field is required and cannot be empty.
        - The 'customer_id' field is optional. If not provided, it will be set to an empty string.
        - The 'channel_id' field is optional. If not provided, it will be set to "LANGCHAIN_NEOSPACE".
        - You can include any additional fields you want to track in the 'extra_body' parameter.
    """

    validation_errs = []

    extra_body = deep_strip(extra_body)

    if 'session_id' not in extra_body:
        validation_errs += ["session_id is missing"]
    elif not isinstance(extra_body["session_id"], str):
        validation_errs += ["session_id is invalid"]
    elif extra_body.get("session_id", "") == "":
        validation_errs += ["session_id is empty"]

    extra_body["customer_id"] = extra_body.get("customer_id", "")
    if not isinstance(extra_body["customer_id"], str):
        validation_errs += ["customer_id is invalid"]

    extra_body["channel_id"] = extra_body.get("channel_id", "")
    if not isinstance(extra_body["channel_id"], str):
        validation_errs += ["channel_id is invalid"]
    
    extra_body["channel_id"] = extra_body["channel_id"] if extra_body["channel_id"] != "" else "LANGCHAIN_NEOSPACE"

    if len(validation_errs) > 0:
        raise ValueError(f"extra_body validation errors \n\t{"\n\t".join(validation_errs)}")


    return extra_body
